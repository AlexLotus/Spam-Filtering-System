{"version":3,"sources":["images/logo.png","logo.svg","images/img1.png","images/img2.png","images/img3.png","images/ss.png","components/Header.js","components/Home.js","components/Filter.js","components/UpdatedFilter.js","components/AuthedFilter.js","components/NotFound.js","components/Secret.js","Auth.js","components/Callback.js","App.js","components/Main.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","onTargetScroll","e","target","documentElement","document","body","navElem","getElementById","scrollTop","className","includes","curClassNames","newClassName","replace","window","addEventListener","this","_this$props","props","auth","userName","name","react_default","a","createElement","id","Link","to","src","SpamScannerLogo","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","href","isAuthenticated","dist","bg","color","index_es","icon","faSignOutAlt","style","marginRight","onClick","login","faSignInAlt","Component","Home","img1","img2","img3","px","py","rel","class","justifyContent","flexWrap","mx","padding","flexDirection","alignItems","width","my","fontSize","fontWeight","mt","borderRadius","Filter","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onMessageChange","setState","message","value","onMessageChange2","test2","split","messages","handleSubmit2","stopPropagation","preventDefault","checkMessage2","checkMessage","state","items","fetch","method","headers","Accept","Content-Type","JSON","stringify","email_text","then","res","json","result","isLoaded","email_class","error","message2","items2","i","length","Access-Control-Allow-Origin","push","String","emailtext","_this$state","paddingTop","onSubmit","placeholder","onChange","UpdatedFilter","resetState","loading","notify","hamCount","spamCount","formatString","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","getResponse","sent","map","item","key","stop","_ref2","_callee2","_context2","console","log","Origin","abrupt","_x","apply","arguments","_this2","files","reader","FileReader","readAsText","onload","test","string","temporary","v","trimLeft","trimRight","_this3","for","faCloudUploadAlt","accept","handleChangeFile","size","faCheck","faTimes","scope","display","flex","overflow","Fragment","NotFound","Secret","timer","history","setInterval","logout","Auth","auth0","WebAuth","domain","clientID","redirectUri","audience","responseType","bind","authorize","parseHash","err","authResults","accessToken","idToken","expiresAt","expiresIn","Date","getTime","localStorage","setItem","location","hash","pathname","parse","getItem","removeItem","jwtDecode","Callback","handleAuthentication","App","isAuthed","BrowserRouter","minHeight","Header_Header","assign","Switch","Route","path","exact","render","Redirect","routerProps","Secret_Secret","NotFound_NotFound","Home_Home","Callback_Callback","AuthedFilter_UpdatedFilter","UpdatedFilter_UpdatedFilter","Filter_Filter","component","Boolean","hostname","match","changes","ReactDOM","src_App_0","initialState","getProfile","given_name","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9d2fe7e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7f3709cc.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/img1.d4a13cfc.png\";","module.exports = __webpack_public_path__ + \"static/media/img2.7dc9f032.png\";","module.exports = __webpack_public_path__ + \"static/media/img3.a05f580b.png\";","module.exports = __webpack_public_path__ + \"static/media/ss.734523df.png\";","import React, { Component } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport logo from \"./../logo.svg\";\nimport SpamScannerLogo from \"./../images/logo.png\";\nimport \"./../App.css\";\nimport { Button } from \"rebass\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Header extends Component {\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.onTargetScroll);\n  }\n\n  onTargetScroll = e => {\n    const { target } = e;\n    const documentElement = document.documentElement || document.body;\n    const navElem = document.getElementById(\"main-nav\");\n\n    if (\n      documentElement.scrollTop > 50 &&\n      !navElem.className.includes(\"scrolled\")\n    ) {\n      const curClassNames = navElem.className;\n      navElem.className = curClassNames + \" scrolled\";\n    } else if (documentElement.scrollTop === 0) {\n      const curClassNames = navElem.className;\n      const newClassName = curClassNames.replace(/scrolled/, \"\");\n      navElem.className = newClassName;\n    }\n  };\n\n  render() {\n    const { auth, name: userName } = this.props;\n\n    return (\n      <nav\n        className=\"navbar transparent navbar-expand-lg fixed-top App-header\"\n        id=\"main-nav\"\n      >\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"home\">\n            <img\n              src={SpamScannerLogo}\n              height={30}\n              className=\"d-inline-block align-top\"\n              alt=\"logo\"\n            />\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <NavLink to=\"/home\">\n                  <span className=\"nav-link\">Home</span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to=\"/filter\">\n                  <span className=\"nav-link\">Filter</span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"home#HowTo\">\n                  How To\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"home#Download\">\n                  Download\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"home#contact\">\n                  Contact\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                {auth.isAuthenticated() ? (\n                  <NavLink to=\"/secret\">\n                    <Button bg=\"transparent\" color=\"#fe7676\">\n                      <FontAwesomeIcon\n                        icon={faSignOutAlt}\n                        style={{ marginRight: 8 }}\n                      />\n                      Logout {userName}\n                    </Button>\n                  </NavLink>\n                ) : (\n                  <Button\n                    bg=\"transparent\"\n                    color=\"#00deff\"\n                    onClick={this.props.auth.login}\n                  >\n                    <FontAwesomeIcon\n                      icon={faSignInAlt}\n                      style={{ marginRight: 8 }}\n                    />\n                    Login\n                  </Button>\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./../index\";\nimport \"./../App.css\";\nimport logo from \"./../images/ss.png\";\nimport img1 from \"./../images/img1.png\";\nimport img2 from \"./../images/img2.png\";\nimport img3 from \"./../images/img3.png\";\nimport { Link } from \"react-router-dom\";\nimport { homedir } from \"os\";\nimport \"./../App\";\nimport { Button, Image, Text, Flex, Box } from \"rebass\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <section id=\"landing\" className=\"linear\">\n          {/* <Image width={[1 / 3, 1 / 3, 1 / 4]} src={logo} /> */}\n\n          <div className=\"about-header-img\">\n            <Image src={img1} className=\"img1\" />\n            <Image src={img2} className=\"img2\" />\n            <Image src={img3} className=\"img3\" />\n          </div>\n          <h1 className=\"white\">Welcome to Spam Scanner </h1>\n\n          <p className=\"lead white\">\n            Spammy is an application made for simplifying the spam filtering\n            process. Use our FREE online service to filter out multiple\n            messages! You can submit your requests with messages seperated by\n            commas! Support for file uploads and downloads are in planning 2019!\n          </p>\n\n          <div>\n            <br />\n            <Link to=\"/filter\">\n              <Button bg=\"#00deff\" px={[3, 5]} py={[2, 3]}>\n                Try it out!\n              </Button>\n            </Link>\n          </div>\n          {/* <Link to=\"/new\">\n                        <input type=\"button\" value=\"Try it out!\" className=\"btn btn-lg btn-danger\" />\n                    </Link> */}\n        </section>\n\n        <section className=\"white\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-8 mx-auto\">\n                <section>\n                  <div\n                    id=\"Download\"\n                    className=\"bg-light black mt-5 py-5 rounded\"\n                  >\n                    <div className=\"container\">\n                      <div className=\"row\">\n                        <div className=\"col-lg-8 mx-auto\">\n                          <h2>Installation</h2>\n                          <p className=\"lead\">\n                            <a\n                              href=\"https://docs.google.com/document/d/1dnvha1Wa_eztyvEsedWoZYJfITSkp85ARqqSUI8T_0Q/edit?usp=sharing\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              >\n                              <button type=\"button\" class=\"btn btn-info\">\n                                Spam-Scanner Instructions\n                              </button>\n                            </a>\n                          </p>\n                          <h2>Downloads</h2>\n                          <p className=\"lead\">\n                            <Flex justifyContent=\"space-around\" flexWrap=\"wrap\">\n                              <a\n                                href=\"https://github.com/AlexLotus/Spam-Scanner\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"my-2\"\n                              >\n                                <button type=\"button\" class=\"btn btn-info\">\n                                  Spam-Scanner\n                                </button>\n                              </a>\n                              <a\n                                href=\"https://nodejs.org/en/download/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"my-2\"\n                              >\n                                <button type=\"button\" class=\"btn btn-info\">\n                                  Node.js\n                                </button>\n                              </a>\n                              <a\n                                href=\"https://desktop.github.com/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"my-2\"\n                              >\n                                <button type=\"button\" class=\"btn btn-info\">\n                                  Github Desktop\n                                </button>\n                              </a>\n                              <a\n                                href=\"https://code.visualstudio.com/download\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"my-2\"\n                              >\n                                <button type=\"button\" class=\"btn btn-info\">\n                                  Visual Studio Code\n                                </button>\n                              </a>\n                            </Flex>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    id=\"HowTo\"\n                    className=\"bg-light black my-2 py-5 px-5 rounded\"\n                  >\n                    <div className=\"container\">\n                      <div className=\"row\">\n                        <div>\n                          <h2>How to use the site</h2>\n                          <p className=\"lead\">\n                            <div>\n                              <p class=\"text-left\">\n                                <strong>Instructions to follow:</strong>\n                                <br />\n                                <ol>\n                                  <li>Click the filter tab </li>\n                                  <li>Type in some text (comma deliniated)</li>\n                                  <p class=\"text-center\">\n                                    <img\n                                      className=\"img howto-gif\"\n                                      src=\"https://media.giphy.com/media/eidVWXlVIU1xa6ACIn/giphy.gif\"\n                                      alt=\"...\"\n                                    />\n                                  </p>\n                                  <div>\n                                    <p class=\"text-left\">\n                                      or upload some text from a .txt file by\n                                      clicking the upload button on the screen.\"\n                                    </p>\n                                    <p class=\"text-center\">\n                                      <img\n                                        className=\"img howto-gif\"\n                                        src=\"https://media.giphy.com/media/LNxIrM4WZtW8WRgoXE/giphy.gif\"\n                                        alt=\"...\"\n                                      />\n                                    </p>\n                                  </div>\n                                  <li>Click Submit</li>\n                                </ol>\n                              </p>\n                            </div>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </section>\n                <h2 id=\"contact\">About us </h2>\n                <p className=\"lead\">\n                  This product was created during a senior project at the\n                  Univeristy of Central Missouri, created by Alex Kondratenko,\n                  Kishan Polekar, Shane-Lewes Tenorio, and Ryan Charles.\n                  <Flex\n                    flexWrap=\"wrap\"\n                    justifyContent=\"space-around\"\n                    mx={[1, 2, \"-200px\"]}\n                    padding={2}\n                  >\n                    <Flex\n                      flexDirection=\"column\"\n                      alignItems=\"center\"\n                      width={[1, \"50%\"]}\n                      my={2}\n                      px={2}\n                    >\n                      <Text\n                        fontSize={[3, 4, 5]}\n                        fontWeight=\"bold\"\n                        color=\"lightblue\"\n                        mt=\"auto\"\n                      >\n                        Alex Kondratenko\n                      </Text>\n                      <Image\n                        width={[1, 1, 1 / 2]}\n                        src=\"https://avatars1.githubusercontent.com/u/16922103?s=400&v=4\"\n                        borderRadius={8}\n                        mt={\"auto\"}\n                      />\n                    </Flex>\n                    <Flex\n                      flexDirection=\"column\"\n                      alignItems=\"center\"\n                      width={[1, \"50%\"]}\n                      my={2}\n                      px={2}\n                    >\n                      <Text\n                        fontSize={[3, 4, 5]}\n                        fontWeight=\"bold\"\n                        color=\"lightblue\"\n                        mt=\"auto\"\n                      >\n                        Kishan Polekar\n                      </Text>\n                      <Image\n                        width={[1, 1, 1 / 2]}\n                        src=\"https://myedu-images-prod01.s3.amazonaws.com/7642067-49a35f88cdd17d8e1e0370b1048b46d0-thumb\"\n                        borderRadius={8}\n                        mt={\"auto\"}\n                      />\n                    </Flex>\n                    <Flex\n                      flexDirection=\"column\"\n                      alignItems=\"center\"\n                      width={[1, \"50%\"]}\n                      my={2}\n                      px={2}\n                    >\n                      <Text\n                        fontSize={[3, 4, 5]}\n                        fontWeight=\"bold\"\n                        color=\"lightblue\"\n                        mt=\"auto\"\n                      >\n                        Ryan Charles\n                      </Text>\n                      <Image\n                        width={[1, 1, 1 / 2]}\n                        src=\"https://scontent.fmkc1-1.fna.fbcdn.net/v/t1.0-9/61901_10151524487449966_624369307_n.jpg?_nc_cat=101&_nc_ht=scontent.fmkc1-1.fna&oh=7341f3e7f3e6b2f984d73915e12d03cb&oe=5D2A84D0\"\n                        borderRadius={8}\n                        mt={\"auto\"}\n                      />\n                    </Flex>\n                    <Flex\n                      flexDirection=\"column\"\n                      alignItems=\"center\"\n                      width={[1, \"50%\"]}\n                      my={2}\n                      px={2}\n                    >\n                      <Text\n                        fontSize={[3, 4, 5]}\n                        fontWeight=\"bold\"\n                        color=\"lightblue\"\n                        mt=\"auto\"\n                      >\n                        Shane-Lewes Tenorio\n                      </Text>\n                      <Image\n                        width={[1, 1, 1 / 2]}\n                        src=\"https://avatars1.githubusercontent.com/u/12619633?s=460&v=4\"\n                        borderRadius={8}\n                        mt={\"auto\"}\n                      />\n                    </Flex>\n                  </Flex>\n                  <Text fontSize={[10, 10, 2]} fontWeight=\"bold\" color=\"dark\">\n                    And\n                  </Text>\n                  <Box height={0.5}>\n                    <Text\n                      fontSize={[3, 4, 5]}\n                      fontWeight=\"bold\"\n                      color=\"lightblue\"\n                    >\n                      Dr. Yui Man Lui\n                    </Text>\n                    <Image\n                      width={[1, 1, 1 / 2]}\n                      src=\"https://www.ucmo.edu/college-of-health-science-and-technology/school-of-computer-science-and-mathematics/computer-science-and-software-engineering/faculty/yui-man-lui/lui.png\"\n                      borderRadius={8}\n                    />\n                  </Box>\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: true,\n      items: [],\n      emailtext: \"none\",\n      message: \"\",\n      messages: [],\n      items2: [],\n      message2: \"\"\n    };\n  }\n\n  componentDidMount() {\n    //this.checkMessage();\n  }\n\n  onMessageChange = e => {\n    this.setState({ message: e.target.value });\n  };\n\n  onMessageChange2 = e => {\n    this.setState({ message: e.target.value });\n    var test = e.target.value;\n    var test2 = test.split(\",\");\n    this.setState({ messages: test2 });\n  };\n\n  handleSubmit2 = e => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.checkMessage2();\n  };\n\n  checkMessage = () => {\n    const { message } = this.state;\n    this.setState({ items: \"Loading...\" });\n    fetch(\"http://localhost:8000/api/v1/classify/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email_text: message\n      })\n    })\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            items: result.email_class\n          });\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  };\n\n  checkMessage2 = () => {\n    this.setState({ message2: \"Loading...\" });\n    this.setState({ items2: [] });\n    for (var i = 0; i < this.state.messages.length; i++) {\n      fetch(\"http://localhost:8000/api/v1/classify/\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        },\n        body: JSON.stringify({\n          email_text: this.state.messages[i]\n        })\n      })\n        .then(res => res.json())\n        .then(\n          result => {\n            this.state.items2.push(result.email_class);\n            this.setState({ message2: String(this.state.items2) });\n          },\n          error => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        );\n    }\n  };\n  render() {\n    const { error, isLoaded, items, items2, message, message2 } = this.state;\n\n    return (\n      <div>\n        <header className=\"bg-primary text-white\" style={{ paddingTop: 50 }}>\n          <div className=\"container text-center\">\n            <p className=\"lead\">A spam filtering application for your inbox!</p>\n          </div>\n        </header>\n\n        <section id=\"about\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-8 mx-auto\">\n                <p className=\"lead\">\n                  Insert multiple messages to classify, seperated by comma\n                </p>\n                <p>{this.emailtext}</p>\n                {!isLoaded ? (\n                  <div>Loading...</div>\n                ) : error ? (\n                  <div>Error: {error.message}</div>\n                ) : (\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <form onSubmit={this.handleSubmit2} className=\"text-left\">\n                        <div className=\"form-group\">\n                          <label>Message:</label>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Insert message here\"\n                            className=\"form-control\"\n                            onChange={this.onMessageChange2}\n                            value={message}\n                          />\n                        </div>\n                        <input\n                          type=\"submit\"\n                          value=\"Submit\"\n                          className=\"btn btn-primary\"\n                        />\n                      </form>\n                    </div>\n                    <div className=\"card-footer\">\n                      <strong>Result: {this.state.message2}</strong>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCloudUploadAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport logo from \"./../images/logo.png\";\n\nexport default class UpdatedFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      message: \"\",\n      messages: [\"\"],\n      message2: \"\",\n      loading: \"\",\n      notify: \"\",\n      hamCount: 0,\n      spamCount: 0\n    };\n  }\n\n  // Reset the state\n  resetState = e => {\n    this.setState({\n      error: null,\n      isLoaded: false,\n      items: [],\n      message: \"\",\n      messages: [\"\"],\n      message2: \"\",\n      loading: \"\",\n      notify: \"\",\n      hamCount: 0,\n      spamCount: 0\n    });\n  };\n\n  // On message change function\n  onMessageChange = e => {\n    this.setState({ message: e.target.value });\n    this.setState({ messages: this.formatString(e.target.value) });\n  };\n\n  // Submit button handling\n  handleSubmit = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.checkMessage();\n  };\n\n  // Check the message (spam or ham)\n  checkMessage = async () => {\n    if (this.state.messages[0] != \"\") {\n      this.setState({ loading: \"Loading...\", notify: \"\" });\n\n      this.setState({ items: [], spamCount: 0, hamCount: 0 });\n\n      for (var i = 0; i < this.state.messages.length; i++) {\n        const message = this.state.messages[i];\n        const response = await this.getResponse(message);\n        this.state.items.push({\n          id: i,\n          result: response,\n          message: message\n        });\n        const items = this.state.items.map(item => (\n          <tr key={item.id}>\n            <td>\"{item.message}\"</td>\n            <td>{item.result}</td>\n          </tr>\n        ));\n\n        // Count the number of Ham & Spam messages\n        let hamCount = 0;\n        let spamCount = 0;\n        response === \"ham\" ? (hamCount = 1) : (spamCount = 1);\n        this.setState({\n          message2: items,\n          isLoaded: true,\n          hamCount: this.state.hamCount + hamCount,\n          spamCount: this.state.spamCount + spamCount\n        });\n      }\n      this.setState({ loading: \"Complete!\" });\n    } else {\n      this.resetState();\n      this.setState({ notify: \"Submitted text is empty!\" });\n    }\n  };\n\n  getResponse = async message => {\n    console.log(message);\n    const response = await fetch(\n      \"https://cors-anywhere.herokuapp.com/https://plino.herokuapp.com/api/v1/classify/\",\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          Origin: \"localhost:3000\"\n        },\n        body: JSON.stringify({\n          email_text: message\n        })\n      }\n    )\n      .then(res => res.json())\n      .then(result => {\n        return result.email_class;\n      });\n    console.log(\"test\");\n    return response;\n  };\n\n  // Function to handle the submission of files\n  handleChangeFile(e) {\n    let files = e.target.files;\n    let reader = new FileReader();\n\n    // Check if fileReader is empty\n    if (reader != null) {\n      reader.readAsText(files[0]);\n\n      // Reader load function\n      reader.onload = e => {\n        console.log(e.target.result);\n        this.setState({ message: e.target.result });\n        var test = e.target.result;\n        var test2 = this.formatString(test);\n        this.setState({ messages: test2 });\n        this.checkMessage();\n        reader = null;\n      };\n    } else {\n      this.resetState();\n      this.setState({\n        notify: \"Empty text file!\"\n      });\n      reader = null;\n    }\n  }\n\n  // Function to format & prepare strings\n  formatString(string) {\n    // Separate at the comma\n    var temporary = string.split(\",\");\n\n    // Trim the whitespace for each string\n    temporary = temporary.map(function(v) {\n      v = v.trimLeft();\n      v = v.trimRight();\n      return v;\n    });\n\n    return temporary;\n  }\n\n  // Render canvas\n  render() {\n    const { isLoaded, message, notify } = this.state;\n\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row flex-column\">\n          <header className=\"bg-primary text-white pt-5 pb-2\">\n            <div className=\"container text-center\">\n              <span className=\"lead\">\n                A spam filtering application for your inbox!\n              </span>\n            </div>\n          </header>\n\n          <section id=\"about\" style={{ color: \"white\" }}>\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-8 mx-auto\">\n                  {/* <img className=\"logo\" src={logo} /> */}\n                  <p className=\"lead\">\n                    Quickly and easily classify your text messages as spam or\n                    ham.\n                  </p>\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <form onSubmit={this.handleSubmit} className=\"text-left\">\n                        <div className=\"form-group\">\n                          <label>Message:</label>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Insert message here\"\n                            className=\"form-control\"\n                            onChange={this.onMessageChange}\n                            value={message}\n                          />\n\n                          {notify !== \"\" ? (\n                            <h5 className=\"notify\">{notify}</h5>\n                          ) : (\n                            <br />\n                          )}\n                        </div>\n\n                        <div>\n                          <label\n                            for=\"file-upload\"\n                            className=\"custom-file-upload\"\n                          >\n                            <FontAwesomeIcon\n                              className=\"icon\"\n                              icon={faCloudUploadAlt}\n                            />{\" \"}\n                            Upload\n                          </label>\n                          <input\n                            id=\"file-upload\"\n                            type=\"file\"\n                            name=\"Filter Text\"\n                            accept=\".txt\"\n                            onChange={e => this.handleChangeFile(e)}\n                          />\n\n                          <input\n                            type=\"submit\"\n                            value=\"Submit\"\n                            className=\"custom-sub btn btn-primary\"\n                          />\n                        </div>\n                      </form>\n                    </div>\n                    <div className=\"card-footer\">\n                      <strong className=\"m-2 black\">\n                        {this.state.loading}\n                      </strong>\n                      {this.state.hamCount > 0 || this.state.spamCount > 0 ? (\n                        <div>\n                          <h2>\n                            <span className=\"left black\">\n                              <FontAwesomeIcon\n                                className=\"icon2 green\"\n                                size=\"xs\"\n                                icon={faCheck}\n                              />{\" \"}\n                              {this.state.hamCount}\n                            </span>\n                            <span className=\"right black\">\n                              <FontAwesomeIcon\n                                className=\"icon2 red\"\n                                size=\"sm\"\n                                icon={faTimes}\n                              />{\" \"}\n                              {this.state.spamCount}\n                            </span>\n                          </h2>\n                        </div>\n                      ) : (\n                        <br />\n                      )}\n                      {!isLoaded ? (\n                        <br />\n                      ) : (\n                        <table className=\"table mt-2 table-striped\">\n                          <thead className=\"thead-dark\">\n                            <tr>\n                              <th scope=\"col\">Message</th>\n                              <th scope=\"col\">Result</th>\n                            </tr>\n                          </thead>\n                          <tbody>{this.state.message2}</tbody>\n                        </table>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCloudUploadAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { Flex } from \"rebass\";\nimport logo from \"./../images/logo.png\";\n\nexport default class UpdatedFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      message: \"\",\n      messages: [\"\"],\n      message2: \"\",\n      loading: \"\",\n      notify: \"\",\n      hamCount: 0,\n      spamCount: 0\n    };\n  }\n\n  componentDidMount() {\n    const navElem = document.getElementById(\"main-nav\");\n\n    const curClassNames = navElem.className;\n    navElem.className = curClassNames + \" scrolled\";\n  }\n\n  componentWillUnmount() {\n    const navElem = document.getElementById(\"main-nav\");\n    const curClassNames = navElem.className;\n    const newClassName = curClassNames.replace(/scrolled/, \"\");\n    navElem.className = newClassName;\n  }\n\n  // Reset the state\n  resetState = e => {\n    this.setState({\n      error: null,\n      isLoaded: false,\n      items: [],\n      message: \"\",\n      messages: [\"\"],\n      message2: \"\",\n      loading: \"\",\n      notify: \"\",\n      hamCount: 0,\n      spamCount: 0\n    });\n  };\n\n  // On message change function\n  onMessageChange = e => {\n    this.setState({ message: e.target.value });\n    this.setState({ messages: this.formatString(e.target.value) });\n  };\n\n  // Submit button handling\n  handleSubmit = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.checkMessage();\n  };\n\n  // Check the message (spam or ham)\n  checkMessage = async () => {\n    if (this.state.messages[0] != \"\") {\n      this.setState({ loading: \"Loading...\", notify: \"\" });\n\n      this.setState({ items: [], spamCount: 0, hamCount: 0 });\n\n      for (var i = 0; i < this.state.messages.length; i++) {\n        const message = this.state.messages[i];\n        const response = await this.getResponse(message);\n        this.state.items.push({\n          id: i,\n          result: response,\n          message: message\n        });\n        const items = this.state.items.map(item => (\n          <tr key={item.id}>\n            <td>\"{item.message}\"</td>\n            <td>{item.result}</td>\n          </tr>\n        ));\n\n        // Count the number of Ham & Spam messages\n        let hamCount = 0;\n        let spamCount = 0;\n        response === \"ham\" ? (hamCount = 1) : (spamCount = 1);\n        this.setState({\n          message2: items,\n          isLoaded: true,\n          hamCount: this.state.hamCount + hamCount,\n          spamCount: this.state.spamCount + spamCount\n        });\n      }\n      this.setState({ loading: \"Complete!\" });\n    } else {\n      this.resetState();\n      this.setState({ notify: \"Submitted text is empty!\" });\n    }\n  };\n\n  getResponse = async message => {\n    console.log(message);\n    const response = await fetch(\n      \"https://cors-anywhere.herokuapp.com/https://plino.herokuapp.com/api/v1/classify/\",\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          Origin: \"localhost:3000\"\n        },\n        body: JSON.stringify({\n          email_text: message\n        })\n      }\n    )\n      .then(res => res.json())\n      .then(result => {\n        return result.email_class;\n      });\n    console.log(\"test\");\n    return response;\n  };\n\n  // Function to handle the submission of files\n  handleChangeFile(e) {\n    let files = e.target.files;\n    let reader = new FileReader();\n\n    // Check if fileReader is empty\n    if (reader != null) {\n      reader.readAsText(files[0]);\n\n      // Reader load function\n      reader.onload = e => {\n        console.log(e.target.result);\n        this.setState({ message: e.target.result });\n        var test = e.target.result;\n        var test2 = this.formatString(test);\n        this.setState({ messages: test2 });\n        this.checkMessage();\n        reader = null;\n      };\n    } else {\n      this.resetState();\n      this.setState({\n        notify: \"Empty text file!\"\n      });\n      reader = null;\n    }\n  }\n\n  // Function to format & prepare strings\n  formatString(string) {\n    // Separate at the comma\n    var temporary = string.split(\",\");\n\n    // Trim the whitespace for each string\n    temporary = temporary.map(function(v) {\n      v = v.trimLeft();\n      v = v.trimRight();\n      return v;\n    });\n\n    return temporary;\n  }\n\n  // Render canvas\n  render() {\n    const { isLoaded, message, notify } = this.state;\n\n    return (\n      <div\n        className=\"container-fluid flex-column bg-light\"\n        style={{\n          height: \"calc(100vh - 56px)\",\n          display: \"flex\",\n          flex: \"1 1 auto\",\n          paddingTop: 60\n        }}\n      >\n        <div className=\"row flex-column\">\n          <div className=\"bg-light w-100 px-5 py-2 border-bottom\">\n            {/* <img className=\"logo\" src={logo} /> */}\n            {/* <p className=\"lead\">\n                Quickly and easily classify your text messages as spam or ham.\n              </p> */}\n            <form onSubmit={this.handleSubmit} className=\"text-left\">\n              <div className=\"form-group\">\n                <label>Message:</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Insert message here\"\n                  className=\"form-control\"\n                  onChange={this.onMessageChange}\n                  value={message}\n                />\n\n                {notify !== \"\" ? <h5 className=\"notify\">{notify}</h5> : <br />}\n              </div>\n\n              <div>\n                <label for=\"file-upload\" className=\"custom-file-upload\">\n                  <FontAwesomeIcon className=\"icon\" icon={faCloudUploadAlt} />{\" \"}\n                  Upload\n                </label>\n                <input\n                  id=\"file-upload\"\n                  type=\"file\"\n                  name=\"Filter Text\"\n                  accept=\".txt\"\n                  onChange={e => this.handleChangeFile(e)}\n                />\n\n                <input\n                  type=\"submit\"\n                  value=\"Submit\"\n                  className=\"custom-sub btn btn-primary\"\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n\n        <div\n          className=\"row flex-row flex-grow-1 spam-list\"\n          style={{ flex: \"1 1 auto\", overflow: \"hidden\" }}\n        >\n          {isLoaded ? (\n            <>\n              <div\n                className=\"flex w-50 m-auto\"\n                style={{ overflow: \"auto\", height: \"100%\" }}\n              >\n                <Flex justifyContent=\"flex-start\" mt=\"3\">\n                  <strong className=\"m-2 black\">{this.state.loading}</strong>\n                  {this.state.hamCount > 0 || this.state.spamCount > 0 ? (\n                    <div className=\"ml-auto\">\n                      <h2>\n                        <span className=\"left black\">\n                          <FontAwesomeIcon\n                            className=\"icon2 green\"\n                            size=\"xs\"\n                            icon={faCheck}\n                          />{\" \"}\n                          {this.state.hamCount}\n                        </span>\n                        <span className=\"right black\">\n                          <FontAwesomeIcon\n                            className=\"icon2 red\"\n                            size=\"sm\"\n                            icon={faTimes}\n                          />{\" \"}\n                          {this.state.spamCount}\n                        </span>\n                      </h2>\n                    </div>\n                  ) : (\n                    <br />\n                  )}\n                </Flex>\n                {!isLoaded ? (\n                  <br />\n                ) : (\n                  <table className=\"table mt-2 table-striped\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th scope=\"col\">Message</th>\n                        <th scope=\"col\">Result</th>\n                      </tr>\n                    </thead>\n                    <tbody>{this.state.message2}</tbody>\n                  </table>\n                )}\n              </div>\n            </>\n          ) : (\n            <p className=\"lead w-100 text-align-center\">\n              Quickly and easily classify your text messages as spam or ham.\n              <br />\n              First input your message or upload a file above...\n            </p>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from \"react\";\n\nexport default class NotFound extends Component {\n    render(){\n    return (\n        <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col-md-7 mx-auto\">\n            <h1>404</h1>\n            <p className=\"lead\"> \n                Better luck next time,\n                or we'll meet again...\n            </p>\n            </div>\n        </div>\n    </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Box, Button } from \"rebass\";\n\nexport default class Secret extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: 10\n    };\n  }\n\n  componentDidMount() {\n    const { history } = this.props;\n\n    setInterval(() => {\n      const { timer } = this.state;\n      if (timer === 0) {\n        history.push(\"/home\");\n        return;\n      }\n      this.setState({ timer: timer - 1 });\n    }, 1000);\n  }\n\n  render() {\n    const { timer } = this.state;\n    return (\n      <Box py={5} color=\"white\">\n        It's a secret. Now you can go <a href=\"/home\">Home</a>.\n        <p>Redirecting home in {timer} seconds...</p>\n        <br />\n        <Button onClick={this.props.auth.logout} bg=\"#fe7676\" mt={4}>\n          Logout\n        </Button>\n      </Box>\n    );\n  }\n}\n","/* eslint no-restricted-globals: 0*/\nimport auth0 from \"auth0-js\";\nimport jwtDecode from \"jwt-decode\";\n\nconst LOGIN_SUCCESS_PAGE = \"/filter\";\nconst LOGIN_FAILURE_PAGE = \"/\";\n\nexport default class Auth {\n  auth0 = new auth0.WebAuth({\n    domain: \"spam-scanner1.auth0.com\",\n    clientID: \"A9d4olMwKqQ2BW2G46E0EUPY2iEQfQ5e\",\n    redirectUri: \"http://localhost:3000/callback\",\n    audience: \"https://spam-scanner1.auth0.com/api/v2/\",\n    responseType: \"token id_token\",\n    scope: \"openid profile\"\n  });\n\n  constructor() {\n    this.login = this.login.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResults) => {\n      if (authResults && authResults.accessToken && authResults.idToken) {\n        let expiresAt = JSON.stringify(\n          authResults.expiresIn * 1000 + new Date().getTime()\n        );\n        localStorage.setItem(\"access_token\", authResults.accessToken);\n        localStorage.setItem(\"id_token\", authResults.idToken);\n        localStorage.setItem(\"expires_at\", expiresAt);\n        location.hash = \"\";\n        location.pathname = LOGIN_SUCCESS_PAGE;\n      } else if (err) {\n        location.pathname = LOGIN_FAILURE_PAGE;\n        console.log(err);\n      }\n    });\n  }\n\n  isAuthenticated() {\n    let expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n    return new Date().getTime() < expiresAt;\n  }\n\n  logout() {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n    location.pathname = LOGIN_FAILURE_PAGE;\n  }\n  getProfile() {\n    if (localStorage.getItem(\"id_token\")) {\n      return jwtDecode(localStorage.getItem(\"id_token\"));\n    } else {\n      return {};\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport Auth from \"../Auth\";\n\nexport default class Callback extends Component {\n  componentDidMount() {\n    const { auth } = this.props;\n    console.log(\"callback auth:\", auth);\n    auth.handleAuthentication();\n  }\n  render() {\n    return <div>Loading...</div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Filter from \"./components/Filter\";\nimport UpdatedFilter from \"./components/UpdatedFilter\";\nimport AuthedFilter from \"./components/AuthedFilter\";\nimport \"./bootstrap-override.css\";\nimport \"./App.css\";\nimport NotFound from \"./components/NotFound\";\nimport Secret from \"./components/Secret\";\nimport Callback from \"./components/Callback\";\nimport Main from \"./components/Main\";\nimport logo from \"./logo.svg\";\n\nclass App extends Component {\n  render() {\n    const { auth } = this.props;\n    console.log(this.props);\n    const isAuthed = auth.isAuthenticated();\n\n    return (\n      <Router>\n        <div\n          className=\"App\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            minHeight: \"100vh\"\n          }}\n        >\n          <Header className=\"App-Header\" {...this.props} />\n          <div className=\"fixed-background\" />\n          <div className=\"container-fluid\" style={{ flex: \"1 1 auto\" }}>\n            <div\n              className=\"row flex-xl-nowrap flex-column justify-content-start\"\n              style={{ minHeight: \"100%\" }}\n            >\n              <Switch>\n                <Route\n                  path=\"/\"\n                  exact\n                  render={() => <Redirect to=\"/home\" {...this.props} />}\n                />\n                <Route\n                  path=\"/secret\"\n                  render={routerProps =>\n                    isAuthed ? (\n                      <Secret {...this.props} {...routerProps} />\n                    ) : (\n                      <NotFound />\n                    )\n                  }\n                />\n                <Route path=\"/home\" render={() => <Home {...this.props} />} />\n                <Route\n                  path=\"/callback\"\n                  render={routerProps => (\n                    <Callback {...this.props} {...routerProps} />\n                  )}\n                />\n                <Route\n                  path=\"/filter\"\n                  render={() =>\n                    isAuthed ? (\n                      <AuthedFilter {...this.props} />\n                    ) : (\n                      <UpdatedFilter {...this.props} />\n                    )\n                  }\n                />\n                <Route\n                  path=\"/oldfilter\"\n                  render={() =>\n                    isAuthed ? (\n                      <AuthedFilter {...this.props} />\n                    ) : (\n                      <Filter {...this.props} />\n                    )\n                  }\n                />\n                <Route component={NotFound} />\n              </Switch>\n              {/* {mainComponent} */}\n            </div>\n          </div>\n          <footer className=\"py-3 bg-dark\">\n            <div className=\"container col\">\n              <p className=\"m-0 text-center text-white\">\n                Copyright &copy; Spam-Scanner 2019\n              </p>\n            </div>\n          </footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { Box, Button } from \"rebass\";\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <Box py={5}>\n        <p className=\"App-Intro\">\n          Hey, {this.props.name}\n          <br /> Wanna know a secret? <a href=\"/secret\">Click here</a>\n        </p>\n        {!this.props.auth.isAuthenticated() && (\n          <div>\n            <hr />\n            {/* {Please login first} */}\n            <hr />\n            <Button\n              bg=\"#00deff\"\n              px={[3, 5]}\n              py={[2, 3]}\n              onClick={this.props.auth.login}\n            >\n              Login\n            </Button>\n          </div>\n        )}\n      </Box>\n    );\n  }\n}\n","import App from \"./App\";\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Auth from \"./Auth\";\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nconst auth = new Auth();\n\nlet state = {};\nwindow.setState = changes => {\n  state = Object.assign({}, state, changes);\n\n  ReactDOM.render(<App {...state} />, document.getElementById(\"root\"));\n};\n/* eslint no-restricted-globals: 0*/\nlet username = auth.getProfile().given_name || \"Pleb\";\nlet initialState = {\n  name: username,\n  location: location.pathname.replace(/^\\/?|\\/$/g, \"\"),\n  auth\n};\n\nwindow.setState(initialState);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}