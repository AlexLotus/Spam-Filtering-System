{"version":3,"sources":["logo.svg","images/ss.png","components/Header.js","components/Home.js","components/Filter.js","components/UpdatedFilter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","id","href","src","logo","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Link","to","Component","Home","value","Filter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onMessageChange","e","setState","message","target","onMessageChange2","test2","split","messages","handleSubmit2","stopPropagation","preventDefault","checkMessage2","checkMessage","state","items","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","email_text","then","res","json","result","isLoaded","email_class","error","message2","items2","i","length","Access-Control-Allow-Origin","push","String","emailtext","_this$state","onSubmit","placeholder","onChange","UpdatedFilter","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","loading","console","log","getResponse","sent","map","item","key","stop","_ref2","_callee2","_context2","Origin","abrupt","_x","apply","arguments","scope","App","BrowserRouter","Header_Header","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f548a55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/ss.734523df.png\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"./../logo.svg\";\nimport \"./../App.css\";\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <nav\n          className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top App-header\"\n          id=\"mainNav\"\n        >\n          <div className=\"container\">\n            <a className=\"navbar-brand\" href=\"#page-top\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              Spam Filter\n            </a>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarResponsive\"\n              aria-controls=\"navbarResponsive\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to=\"/\">\n                    <a className=\"nav-link\">\n                        Home\n                    </a>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/new\">\n                    <a className=\"nav-link\">\n                    Filtering\n                    </a>\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link disabled\" href=\"#contact\">\n                    Contact\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n        );\n    };\n}","import React, { Component } from \"react\";\nimport \"./../App.css\";\nimport logo from \"./../images/ss.png\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                <section id=\"landing\" className=\"linear\">\n                    <img className=\"logo\" src={logo}/>\n                    <h1 className=\"white\">Online spam filtering done easy.</h1>\n                    <p className=\"lead white\">\n                        Spammy is an application made for simplifying the spam filtering process.\n                        Use our FREE online service to filter out multiple messages! You can submit\n                        your requests with messages seperated by commas! Support for file uploads\n                        and downloads are in planning 2019!\n                    </p>\n\n                    <Link to=\"/new\">\n                        <input type=\"button\" value=\"Try it out!\" className=\"btn btn-lg btn-danger\" />\n                    </Link>\n                </section>\n\n                <section id=\"services\" className=\"bg-light\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-8 mx-auto\">\n                            <h2>Services we offer</h2>\n                            <p className=\"lead\">\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aut\n                                optio velit inventore, expedita quo laboriosam possimus ea\n                                consequatur vitae, doloribus consequuntur ex. Nemo assumenda\n                                laborum vel, labore ut velit dignissimos.\n                            </p>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n                <section id=\"contact\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-8 mx-auto\">\n                            <h2>Contact us</h2>\n                            <p className=\"lead\">\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vero\n                                odio fugiat voluptatem dolor, provident officiis, id iusto!\n                                Obcaecati incidunt, qui nihil beatae magnam et repudiandae\n                                ipsa exercitationem, in, quo totam.\n                            </p>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    };\n}","import React, { Component } from \"react\";\n\nexport default class Filter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: true,\n          items: [],\n          emailtext: \"none\",\n          message: \"\",\n          messages: [],\n          items2: [],\n          message2: \"\"\n        };\n      }\n    \n      componentDidMount() {\n        //this.checkMessage();\n      }\n\n      onMessageChange = e => {\n        this.setState({ message: e.target.value });\n      };\n    \n      onMessageChange2 = e => {\n    \n        this.setState({ message: e.target.value });\n        var test = e.target.value;\n        var test2 = test.split(',');\n        this.setState({ messages: test2 });\n      };\n    \n    \n      handleSubmit2 = e => {\n        e.stopPropagation();\n        e.preventDefault();\n    \n        this.checkMessage2();\n      };\n\n      checkMessage = () => {\n        const { message } = this.state;\n          this.setState({items: \"Loading...\"});\n        fetch(\n          \"http://localhost:8000/api/v1/classify/\",\n          {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              email_text: message\n            })\n          }\n        )\n          .then(res => res.json())\n          .then(\n            result => {\n              this.setState({\n                isLoaded: true,\n                items: result.email_class\n              });\n            },\n            error => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          );\n      };\n    \n    \n    \n    \n      checkMessage2 = () => {\n          this.setState({message2: \"Loading...\"});\n          this.setState({ items2: [] });\n          for (var i = 0; i < this.state.messages.length; i++) {\n        fetch(\n          \"http://localhost:8000/api/v1/classify/\",\n          {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              \"Access-Control-Allow-Origin\": \"*\"\n            },\n            body: JSON.stringify({\n              email_text: this.state.messages[i]\n            })\n          }\n        )\n          .then(res => res.json())\n          .then(\n            result => {\n              this.state.items2.push(result.email_class);\n              this.setState({message2: String(this.state.items2)});\n            },\n            error => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          );\n          }\n            \n   \n      };\n    render() {\n        const { error, isLoaded, items, items2, message, message2 } = this.state;\n\n        return (\n            <div>\n            <header className=\"bg-primary text-white\">\n            <div className=\"container text-center\">\n              <p className=\"lead\">A spam filtering application for your inbox!</p>\n            </div>\n          </header>\n\n\n<section id=\"about\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-8 mx-auto\">\n                <p className=\"lead\">Insert multiple messages to classify, seperated by comma</p>\n                <p>{this.emailtext}</p>\n                {!isLoaded ? (\n                  <div>Loading...</div>\n                ) : error ? (\n                  <div>Error: {error.message}</div>\n                ) : (\n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <form onSubmit={this.handleSubmit2} className=\"text-left\">\n                        <div className=\"form-group\">\n                          <label>Message:</label>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Insert message here\"\n                            className=\"form-control\"\n                            onChange={this.onMessageChange2}\n                            value={message}\n                          />\n                        </div>\n                        <input\n                          type=\"submit\"\n                          value=\"Submit\"\n                          className=\"btn btn-primary\"\n                        />\n                      </form>\n                    </div>\n                    <div className=\"card-footer\">\n                      <strong>Result: {this.state.message2}</strong>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </section>\n        </div>\n  \n        );\n    };\n}","import React, { Component } from \"react\";\n\nexport default class UpdatedFilter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          error: null,\n          isLoaded: false,\n          items: [],\n          message: \"\",\n          messages: [],\n          message2: \"\",\n          loading: \"\"\n        };\n      }\n    \n\n      onMessageChange = e => {\n    \n        this.setState({ message: e.target.value });\n        var test = e.target.value;\n        var test2 = test.split(',');\n        this.setState({ messages: test2 });\n\n      };\n    \n      handleSubmit = e => {\n        e.stopPropagation();\n        e.preventDefault();\n        this.checkMessage();\n      };\n\n      checkMessage = async () => {\n          this.setState({loading: \"Loading...\"});\n          \n          this.setState({ items: [] });\n\n          for (var i = 0; i < this.state.messages.length; i++) {\n              const message = this.state.messages[i];\n              console.log(\"test\");\n              const response = await this.getResponse(message);\n              console.log(\"test\");\n              this.state.items.push({\n                  id: i,\n                  result: response,\n                  message: message\n              });\n              const items = this.state.items.map(item => (\n                <tr key={item.id}>\n                    <td>\"{ item.message }\"</td>\n                    <td>{ item.result }</td>\n                </tr>\n              ));\n              console.log(\"test\");\n              this.setState({ \n                  message2: items,\n                  isLoaded: true\n                });\n                console.log(this.state.message2);\n          }\n          this.setState({loading: \"Complete!\"});\n            \n   \n      };\n\n      getResponse = async (message) => {\n          console.log(message);\n          const response = await fetch(\n              \"https://cors-anywhere.herokuapp.com/https://plino.herokuapp.com/api/v1/classify/\",\n              {\n                  method: \"POST\",\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Origin\": \"localhost:3000\"\n                  },\n                  body: JSON.stringify({\n                    email_text: message\n                  })\n              }\n          ).then(res => res.json()).then(\n              result => {\n                  return result.email_class;\n              }\n              \n          )\n          console.log(\"test\");\n          return response;\n      }\n\n\n    render() {\n        const { isLoaded, message } = this.state;\n\n        return (\n            <div>\n            <header className=\"bg-primary text-white\">\n            <div className=\"container text-center\">\n              <p className=\"lead\">A spam filtering application for your inbox!</p>\n            </div>\n          </header>\n\n\n<section id=\"about\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-8 mx-auto\">\n                <p className=\"lead\">Insert multiple messages to classify, seperated by comma</p>\n            \n                  <div className=\"card\">\n                    <div className=\"card-body\">\n                      <form onSubmit={this.handleSubmit} className=\"text-left\">\n                        <div className=\"form-group\">\n                          <label>Message:</label>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Insert message here\"\n                            className=\"form-control\"\n                            onChange={this.onMessageChange}\n                            value={message}\n                          />\n                        </div>\n                        <input\n                          type=\"submit\"\n                          value=\"Submit\"\n                          className=\"btn btn-primary\"\n                        />\n                      </form>\n                    </div>\n                    <div className=\"card-footer\">\n                      <strong className=\"m-2\">{this.state.loading}</strong>\n                      {!isLoaded ? (\n                          <br/>\n                      )\n                      :\n                      (\n                      <table className=\"table mt-2 table-striped\">\n                        <thead className=\"thead-dark\">\n                            <tr>\n                                <th scope=\"col\">Message</th>\n                                <th scope=\"col\">Result</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.message2}\n                        </tbody>\n                      </table>\n                      )}\n                    </div>\n                  </div>\n                \n              </div>\n            </div>\n          </div>\n        </section>\n        </div>\n  \n        );\n    };\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Filter from \"./components/Filter\";\nimport UpdatedFilter from \"./components/UpdatedFilter\";\nimport \"./App.css\";\n\nclass App extends Component {\n \n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Router>\n          <div>\n            <div className=\"router\">\n              <Header />\n            </div>\n\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/filter\" component={Filter} />\n            <Route path=\"/new\" component={UpdatedFilter} />\n          </div>\n        </Router>\n        \n        <footer className=\"py-5 bg-dark\">\n          <div className=\"container\">\n            <p className=\"m-0 text-center text-white\">\n              Copyright &copy; Spammy 2019\n            </p>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}